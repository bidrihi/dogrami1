<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="diaryboardMapper">

    <resultMap type="Diary" id="resultdiaryBoard">
        <id column="board_no" property="board_no"/>
        <result column="board_title" property="board_title"/>
        <result column="board_writer" property="board_writer"/>
        <result column="board_content" property="board_content"/>
        <result column="board_old_file" property="board_old_file"/>
        <result column="board_new_file" property="board_new_file"/>
        <result column="board_date" property="board_date"/>
        <result column="board_count" property="board_count"/>
        <result column="like_count" property="like_count"/>
        <result column="open" property="open"/>
        <association property="member" javaType="Member">
            <result column="user_nick" property="user_nick"/>
        </association>
    </resultMap>

    <!-- 좋아요 체크시 해당 글번호와 체크한 회원id 등록 and 삭제처리 -->
    <resultMap type="DiaryLike" id="resultdiarylike">
        <result column="board_no" property="board_no"/>
        <result column="user_id" property="user_id"/>
    </resultMap>

    <!-- 좋아요 체크 -->
    <select id="selectDiaryLikeCheck" parameterType="Map" resultMap="resultdiarylike">
        select *
        from diarylike
        where board_no = #{board_no}
          and user_id = #{user_id}
    </select>

    <!-- 좋아요 증가 -->
    <insert id="insertDiaryLike" parameterType="Map">
        insert into diarylike
        ( board_no
        , user_id)
        select #{board_no} as board_no
             , #{user_id}  as user_id
        from dual
        where not exists (select '1'
                          from diarylike
                          where board_no = #{board_no}
                            and user_id = #{user_id})
    </insert>

    <!-- 좋아요 취소 -->
    <delete id="deleteDiaryLike" parameterType="DiaryLike">
        delete
        from diarylike
        where board_no = #{board_no}
          and user_id = #{user_id}
    </delete>

    <!-- 좋아요 카운트 업데이트 -->
    <update id="updateDiaryLikeCount" parameterType="_int">
        update diary
        set like_count = (select count(*) from diarylike where board_no = #{ board_no })
        where board_no = #{board_no}
    </update>


    <!-- 게시글 리스트 페이징처리(비회원) -->
    <select id="selectList" parameterType="Paging" resultMap="resultdiaryBoard">
		<![CDATA[
        select *
        from (select rownum rnum, board_no, board_title, user_nick, board_date, board_count, open
              from (select *
                    from diary
                             inner join member
                                        on (board_writer = user_id)
                    where open = 'Y'
                    order by board_no desc))
        where rnum >= #{ startRow }
          and rnum <= #{ endRow }
        ]]>
	</select>

    <!-- 게시글 리스트 페이징처리(회원) -->
    <select id="selectListUser" parameterType="Map" resultMap="resultdiaryBoard">
		<![CDATA[
        select *
        from (select rownum rnum, board_no, board_title, user_nick, board_date, board_count, open
              from (select *
                    from diary
                             inner join member
                                        on (board_writer = user_id)
                    where (open = 'Y')
                       or (board_writer = #{user_id} and open = 'N')
                    order by board_no desc))
        where rnum >= #{ paging.startRow }
          and rnum <= #{ paging.endRow }
        ]]>
	</select>

    <!-- 게시글 리스트 페이징처리(관리자) -->
    <select id="selectListAdmin" parameterType="Paging" resultMap="resultdiaryBoard">
		<![CDATA[
        select *
        from (select rownum rnum, board_no, board_title, user_nick, board_date, board_count, open
              from (select *
                    from diary
                             inner join member
                                        on (board_writer = user_id)
                    order by board_no desc))
        where rnum >= #{ startRow }
          and rnum <= #{ endRow }
        ]]>
	</select>


    <!-- 게시글 상세보기 -->
    <select id="selectDiaryBoard" parameterType="_int" resultMap="resultdiaryBoard">
        select *
        from (select *
              from (select *
                    from diary
                             inner join member
                                        on (board_writer = user_id)))
        where board_no = #{board_no}
    </select>


    <!-- 닉네임 검색용 -->
    <select id="selectnickname" parameterType="_int" resultType="String">
        select user_nick
        from diary
                 inner join member
                            on (board_writer = user_id)
        where board_no = #{board_no}
    </select>

    <!-- 게시글 검색(비회원) -->
    <select id="selectSearch" parameterType="Map" resultMap="resultdiaryBoard">
 		<![CDATA[
        select *
        from (select rownum rnum, board_no, board_title, user_nick, board_date, board_count
              from (select *
                    from diary
                             inner join member
                                        on (board_writer = user_id)
                    where (${action} like '%' || #{keyword} || '%')
                      and open = 'Y'
                    order by board_no desc))
        where rnum >= #{ paging.startRow }
          and rnum <= #{ paging.endRow }
        ]]>
 	</select>

    <!-- 게시글 검색(회원) -->
    <select id="selectSearchUser" parameterType="Map" resultMap="resultdiaryBoard">
 		<![CDATA[
        select *
        from (select rownum rnum, board_no, board_title, user_nick, board_date, board_count
              from (select *
                    from diary
                             inner join member
                                        on (board_writer = user_id)
                    where ((${action} like '%' || #{keyword} || '%') and open = 'Y')
                       or ((${action} like '%' || #{keyword} || '%') and user_id = #{user_id} and open = 'N')
                    order by board_no desc))
        where rnum >= #{ paging.startRow }
          and rnum <= #{ paging.endRow }
        ]]>
 	</select>

    <!-- 게시글 검색(관리자) -->
    <select id="selectSearchAdmin" parameterType="Map" resultMap="resultdiaryBoard">
 		<![CDATA[
        select *
        from (select rownum rnum, board_no, board_title, user_nick, board_date, board_count
              from (select *
                    from diary
                             inner join member
                                        on (board_writer = user_id)
                    where ${action} like '%' || #{keyword} || '%'
                    order by board_no desc))
        where rnum >= #{ paging.startRow }
          and rnum <= #{ paging.endRow }
        ]]>
 	</select>

    <!-- 검색 후 리스트 갯수출력(비회원) -->
    <select id="selectListCountSearch" parameterType="Map" resultMap="resultdiaryBoard">
        select *
        from diary
                 inner join member
                            on (board_writer = user_id)
        where (${action} like '%' || #{keyword} || '%')
          and open = 'Y'
    </select>

    <!-- 검색 후 리스트 갯수출력(회원) -->
    <select id="selectListCountSearchUser" parameterType="Map" resultMap="resultdiaryBoard">
        select *
        from diary
                 inner join member
                            on (board_writer = user_id)
        where ((${action} like '%' || #{keyword} || '%') and open = 'Y')
           or ((${action} like '%' || #{keyword} || '%') and user_id = #{user_id} and open = 'N')
    </select>

    <!-- 검색 후 리스트 갯수출력(회원) -->
    <select id="selectListCountSearchAdmin" parameterType="Map" resultMap="resultdiaryBoard">
        select *
        from diary
                 inner join member
                            on (board_writer = user_id)
        where ${action} like '%' || #{keyword} || '%'
    </select>

    <!-- 게시글 상세보기시 조회수 증가 -->
    <update id="updateDiaryBoardReadcount" parameterType="_int">
        update diary
        set BOARD_COUNT = BOARD_COUNT + 1
        where board_no = #{board_no}
    </update>

    <!-- 게시글 작성 -->
    <insert id="insertDiaryBoard" parameterType="Diary">
        insert into diary
        (BOARD_NO, BOARD_TITLE, BOARD_WRITER, BOARD_CONTENT, BOARD_OLD_FILE, BOARD_NEW_FILE, BOARD_DATE, BOARD_COUNT,
         LIKE_COUNT, OPEN)
        values (diaryBOARD_SEQ.nextval, #{board_title}, #{board_writer}, #{board_content}, #{board_old_file},
                #{board_new_file}, sysdate, default, default, #{open})
    </insert>

    <!-- 비회원 일때 총 게시글 갯수 -->
    <select id="selectListCount" resultType="_int">
        select count(*)
        from diary
        where open = 'Y'
    </select>

    <!-- 회원 일때 총 게시글 갯수 -->
    <select id="selectListCountUser" resultType="_int">
        select count(*)
        from diary
        where (open = 'Y')
           or (board_writer = #{user_id} and open = 'N')
    </select>

    <!-- 관리자 일때 총 게시글 갯수 -->
    <select id="selectListCountAdmin" resultType="_int">
        select count(*)
        from diary
    </select>

    <!-- 게시글 수정 -->
    <update id="updateDiaryBoard" parameterType="Diary">
        update diary
        set board_title = #{board_title}, board_content = #{board_content}, board_date = sysdate, open = #{open}
        <if test="board_old_file != null">
            , board_old_file = #{board_old_file}
            , board_new_file = #{board_new_file}
        </if>
        <if test="board_old_file == null">
            , board_old_file = null
            , board_new_file = null
        </if>
        where board_no = #{board_no}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deleteDiaryBoard" parameterType="_int">
        delete
        from diary
        where board_no = #{board_no}
    </delete>

    <!-- 동물일기 내가 쓴글 목록 조회용 -->
    <select id="selectMyDiaryBoardList" parameterType="string" resultMap="resultdiaryBoard">
        select board_no, board_title, board_content, board_date, board_count, like_count
        from diary
        where board_writer = #{user_id}
        order by board_date desc
    </select>

</mapper>